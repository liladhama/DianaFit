import React, { useState } from 'react';

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –º–æ–¥–∞–ª–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø—Ä–∏—á–∏–Ω—ã –Ω–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
export default function ReasonModal({ isVisible, onClose, onReasonSelected, type, itemName }) {
  const [selectedReason, setSelectedReason] = useState('');
  const [customReason, setCustomReason] = useState('');
  const [showCustomInput, setShowCustomInput] = useState(false);

  // –ü—Ä–∏—á–∏–Ω—ã –¥–ª—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫
  const workoutReasons = [
    { id: 'time', text: '‚è∞ –ù–µ —Ö–≤–∞—Ç–∏–ª–æ –≤—Ä–µ–º–µ–Ω–∏', category: 'time' },
    { id: 'tired', text: 'üò¥ –°–ª–∏—à–∫–æ–º —É—Å—Ç–∞–ª(–∞)', category: 'energy' },
    { id: 'sick', text: 'ü§í –ü–ª–æ—Ö–æ —Å–µ–±—è —á—É–≤—Å—Ç–≤—É—é', category: 'health' },
    { id: 'work', text: 'üíº –ú–Ω–æ–≥–æ —Ä–∞–±–æ—Ç—ã', category: 'schedule' },
    { id: 'motivation', text: 'üòû –ù–µ—Ç –º–æ—Ç–∏–≤–∞—Ü–∏–∏', category: 'mental' },
    { id: 'injury', text: 'ü§ï –¢—Ä–∞–≤–º–∞/–±–æ–ª—å', category: 'health' },
    { id: 'equipment', text: 'üèãÔ∏è –ù–µ—Ç –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è', category: 'resources' },
    { id: 'weather', text: 'üåßÔ∏è –ü–ª–æ—Ö–∞—è –ø–æ–≥–æ–¥–∞', category: 'environment' },
    { id: 'family', text: 'üë®‚Äçüë©‚Äçüëß‚Äçüë¶ –°–µ–º–µ–π–Ω—ã–µ –¥–µ–ª–∞', category: 'schedule' },
    { id: 'forgot', text: 'ü§¶ –ó–∞–±—ã–ª(–∞)', category: 'organization' },
    { id: 'other', text: 'üìù –î—Ä—É–≥–∞—è –ø—Ä–∏—á–∏–Ω–∞...', category: 'other' }
  ];

  // –ü—Ä–∏—á–∏–Ω—ã –¥–ª—è –ø–∏—Ç–∞–Ω–∏—è
  const mealReasons = [
    { id: 'not_hungry', text: 'üö´ –ù–µ –±—ã–ª–æ –≥–æ–ª–æ–¥–∞', category: 'appetite' },
    { id: 'no_products', text: 'üõí –ù–µ –±—ã–ª–æ –ø—Ä–æ–¥—É–∫—Ç–æ–≤', category: 'resources' },
    { id: 'no_time', text: '‚è∞ –ù–µ –±—ã–ª–æ –≤—Ä–µ–º–µ–Ω–∏ –≥–æ—Ç–æ–≤–∏—Ç—å', category: 'time' },
    { id: 'expensive', text: 'üí∞ –°–ª–∏—à–∫–æ–º –¥–æ—Ä–æ–≥–æ', category: 'budget' },
    { id: 'dont_like', text: 'üòñ –ù–µ –Ω—Ä–∞–≤–∏—Ç—Å—è –≤–∫—É—Å', category: 'preference' },
    { id: 'ate_other', text: 'üçï –°—ä–µ–ª(–∞) —á—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–µ', category: 'choice' },
    { id: 'restaurant', text: 'üçΩÔ∏è –ï–ª(–∞) –≤ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–µ', category: 'social' },
    { id: 'work_lunch', text: 'üè¢ –†–∞–±–æ—á–∏–π –æ–±–µ–¥', category: 'schedule' },
    { id: 'celebration', text: 'üéâ –ü—Ä–∞–∑–¥–Ω–∏–∫/–º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ', category: 'social' },
    { id: 'stress', text: 'üò∞ –°—Ç—Ä–µ—Å—Å/–ø–µ—Ä–µ–∂–∏–≤–∞–Ω–∏—è', category: 'mental' },
    { id: 'forgot', text: 'ü§¶ –ó–∞–±—ã–ª(–∞) –ø–æ–µ—Å—Ç—å', category: 'organization' },
    { id: 'other', text: 'üìù –î—Ä—É–≥–∞—è –ø—Ä–∏—á–∏–Ω–∞...', category: 'other' }
  ];

  const reasons = type === 'workout' ? workoutReasons : mealReasons;

  const handleReasonSelect = (reasonId) => {
    setSelectedReason(reasonId);
    if (reasonId === 'other') {
      setShowCustomInput(true);
    } else {
      setShowCustomInput(false);
      setCustomReason('');
    }
  };

  const handleSubmit = () => {
    const finalReason = selectedReason === 'other' ? customReason : selectedReason;
    if (finalReason) {
      const reasonData = {
        id: selectedReason,
        text: selectedReason === 'other' ? customReason : reasons.find(r => r.id === selectedReason)?.text,
        category: reasons.find(r => r.id === selectedReason)?.category || 'other',
        timestamp: new Date().toISOString()
      };
      onReasonSelected(reasonData);
      handleClose();
    }
  };

  const handleClose = () => {
    setSelectedReason('');
    setCustomReason('');
    setShowCustomInput(false);
    onClose();
  };

  if (!isVisible) return null;

  return (
    <div style={{
      position: 'fixed',
      top: 0,
      left: 0,
      right: 0,
      bottom: 0,
      backgroundColor: 'rgba(0, 0, 0, 0.5)',
      display: 'flex',
      alignItems: 'center',
      justifyContent: 'center',
      zIndex: 1000,
      padding: '20px'
    }}>
      <div style={{
        backgroundColor: '#fff',
        borderRadius: 16,
        padding: '24px',
        maxWidth: '400px',
        width: '100%',
        maxHeight: '80vh',
        overflowY: 'auto',
        boxShadow: '0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)'
      }}>
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div style={{
          display: 'flex',
          justifyContent: 'space-between',
          alignItems: 'center',
          marginBottom: 20
        }}>
          <h3 style={{
            margin: 0,
            fontSize: 18,
            fontWeight: 700,
            color: '#1a1a1a'
          }}>
            {type === 'workout' ? 'üèãÔ∏è –ü–æ—á–µ–º—É –Ω–µ –≤—ã–ø–æ–ª–Ω–∏–ª–∏?' : 'üçΩÔ∏è –ü–æ—á–µ–º—É –Ω–µ —Å—ä–µ–ª–∏?'}
          </h3>
          <button
            onClick={handleClose}
            style={{
              background: 'none',
              border: 'none',
              fontSize: 24,
              cursor: 'pointer',
              color: '#666',
              padding: 0,
              width: 30,
              height: 30,
              display: 'flex',
              alignItems: 'center',
              justifyContent: 'center'
            }}
          >
            √ó
          </button>
        </div>

        {/* –ù–∞–∑–≤–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ */}
        <div style={{
          backgroundColor: '#f8fafc',
          padding: 12,
          borderRadius: 8,
          marginBottom: 20,
          border: '1px solid #e2e8f0'
        }}>
          <div style={{ fontSize: 14, color: '#666', marginBottom: 4 }}>
            {type === 'workout' ? '–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ:' : '–ü—Ä–∏–µ–º –ø–∏—â–∏:'}
          </div>
          <div style={{ fontSize: 16, fontWeight: 600, color: '#1a1a1a' }}>
            {itemName}
          </div>
        </div>

        {/* –°–ø–∏—Å–æ–∫ –ø—Ä–∏—á–∏–Ω */}
        <div style={{ marginBottom: 20 }}>
          <div style={{
            fontSize: 14,
            color: '#666',
            marginBottom: 12,
            fontWeight: 500
          }}>
            –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É:
          </div>
          
          <div style={{
            maxHeight: '300px',
            overflowY: 'auto',
            border: '1px solid #e2e8f0',
            borderRadius: 8
          }}>
            {reasons.map((reason, index) => (
              <button
                key={reason.id}
                onClick={() => handleReasonSelect(reason.id)}
                style={{
                  width: '100%',
                  padding: '12px 16px',
                  border: 'none',
                  backgroundColor: selectedReason === reason.id ? '#e0e7ff' : '#fff',
                  color: selectedReason === reason.id ? '#2196f3' : '#1a1a1a',
                  fontSize: 14,
                  textAlign: 'left',
                  cursor: 'pointer',
                  borderBottom: index < reasons.length - 1 ? '1px solid #f0f0f0' : 'none',
                  transition: 'all 0.2s ease',
                  display: 'flex',
                  alignItems: 'center'
                }}
                onMouseEnter={(e) => {
                  if (selectedReason !== reason.id) {
                    e.target.style.backgroundColor = '#f8fafc';
                  }
                }}
                onMouseLeave={(e) => {
                  if (selectedReason !== reason.id) {
                    e.target.style.backgroundColor = '#fff';
                  }
                }}
              >
                <span style={{ marginRight: 8 }}>
                  {selectedReason === reason.id ? '‚óè' : '‚óã'}
                </span>
                {reason.text}
              </button>
            ))}
          </div>
        </div>

        {/* –ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ —Å–≤–æ–µ–π –ø—Ä–∏—á–∏–Ω—ã */}
        {showCustomInput && (
          <div style={{ marginBottom: 20 }}>
            <label style={{
              display: 'block',
              fontSize: 14,
              color: '#666',
              marginBottom: 8,
              fontWeight: 500
            }}>
              –£–∫–∞–∂–∏—Ç–µ —Å–≤–æ—é –ø—Ä–∏—á–∏–Ω—É:
            </label>
            <textarea
              value={customReason}
              onChange={(e) => setCustomReason(e.target.value)}
              placeholder="–û–ø–∏—à–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É..."
              style={{
                width: '100%',
                padding: 12,
                border: '1px solid #e2e8f0',
                borderRadius: 8,
                fontSize: 14,
                fontFamily: 'inherit',
                resize: 'vertical',
                minHeight: 80,
                boxSizing: 'border-box'
              }}
            />
          </div>
        )}

        {/* –ö–Ω–æ–ø–∫–∏ */}
        <div style={{
          display: 'flex',
          gap: 12,
          justifyContent: 'flex-end'
        }}>
          <button
            onClick={handleClose}
            style={{
              padding: '10px 20px',
              border: '1px solid #e2e8f0',
              borderRadius: 8,
              backgroundColor: '#fff',
              color: '#666',
              fontSize: 14,
              fontWeight: 500,
              cursor: 'pointer',
              transition: 'all 0.2s ease'
            }}
          >
            –û—Ç–º–µ–Ω–∞
          </button>
          <button
            onClick={handleSubmit}
            disabled={!selectedReason || (selectedReason === 'other' && !customReason.trim())}
            style={{
              padding: '10px 20px',
              border: 'none',
              borderRadius: 8,
              backgroundColor: selectedReason && (selectedReason !== 'other' || customReason.trim()) 
                ? '#2196f3' : '#e2e8f0',
              color: selectedReason && (selectedReason !== 'other' || customReason.trim()) 
                ? '#fff' : '#999',
              fontSize: 14,
              fontWeight: 600,
              cursor: selectedReason && (selectedReason !== 'other' || customReason.trim()) 
                ? 'pointer' : 'not-allowed',
              transition: 'all 0.2s ease'
            }}
          >
            –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
          </button>
        </div>
      </div>
    </div>
  );
}
