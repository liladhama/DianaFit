import React, { useState, useEffect } from 'react';
import VideoPlayer from './VideoPlayer';
import DianaChat from './DianaChat';
import { getWorkoutLocation, getDayId, getExerciseEnglishName, getVideoPathForExercise } from '../utils/videoUtils';
import chatDianaIcon from '../assets/icons/chat-diana-icon.png';

// –î–æ–±–∞–≤–ª—è–µ–º CSS –∞–Ω–∏–º–∞—Ü–∏—é –¥–ª—è —Å–ø–∏–Ω–Ω–µ—Ä–∞
const spinnerStyles = `
  @keyframes spin {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
  }
`;

// –í—Å—Ç–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –≤ head, –µ—Å–ª–∏ –∏—Ö –µ—â–µ –Ω–µ—Ç
if (!document.querySelector('#spinner-styles')) {
  const style = document.createElement('style');
  style.id = 'spinner-styles';
  style.textContent = spinnerStyles;
  document.head.appendChild(style);
}

// –í—Ä–µ–º–µ–Ω–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ production URL –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ò–ò
const API_URL = 'https://dianafit.onrender.com';

// –ú–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ü–∏—Ç–∞—Ç—ã –æ—Ç –î–∏–∞–Ω—ã
const motivationalQuotes = [
  "–ù–µ –Ω—É–∂–Ω–æ –±—ã—Ç—å –∏–¥–µ–∞–ª—å–Ω–æ–π. –ù—É–∂–Ω–æ –±—ã—Ç—å —Å—Ç–∞–±–∏–ª—å–Ω–æ–π. ‚Äî –î–∏–∞–Ω–∞",
  "–ö–∞–∂–¥—ã–π –¥–µ–Ω—å ‚Äî —ç—Ç–æ –Ω–æ–≤–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å—Ç–∞—Ç—å –ª—É—á—à–µ. ‚Äî –î–∏–∞–Ω–∞",
  "–¢–≤–æ–µ —Ç–µ–ª–æ –º–æ–∂–µ—Ç. –¢–≤–æ–π —Ä–∞–∑—É–º —Å–æ–º–Ω–µ–≤–∞–µ—Ç—Å—è. –°–ª—É—à–∞–π —Ç–µ–ª–æ. ‚Äî –î–∏–∞–Ω–∞",
  "–ü—Ä–æ–≥—Ä–µ—Å—Å –≤–∞–∂–Ω–µ–µ —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–∞. ‚Äî –î–∏–∞–Ω–∞",
  "–¢–≤–æ—è —Ü–µ–ª—å ‚Äî –Ω–µ –±—ã—Ç—å –∫–∞–∫ –≤—Å–µ, –∞ –±—ã—Ç—å –ª—É—á—à–µ–π –≤–µ—Ä—Å–∏–µ–π —Å–µ–±—è. ‚Äî –î–∏–∞–Ω–∞"
];

// –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ "–í—Ç–æ—Ä–Ω–∏–∫, 25 –∏—é–Ω—è"
const getCurrentDateString = () => {
  const now = new Date();
  const days = ['–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ', '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', '–í—Ç–æ—Ä–Ω–∏–∫', '–°—Ä–µ–¥–∞', '–ß–µ—Ç–≤–µ—Ä–≥', '–ü—è—Ç–Ω–∏—Ü–∞', '–°—É–±–±–æ—Ç–∞'];
  const months = ['—è–Ω–≤–∞—Ä—è', '—Ñ–µ–≤—Ä–∞–ª—è', '–º–∞—Ä—Ç–∞', '–∞–ø—Ä–µ–ª—è', '–º–∞—è', '–∏—é–Ω—è', '–∏—é–ª—è', '–∞–≤–≥—É—Å—Ç–∞', '—Å–µ–Ω—Ç—è–±—Ä—è', '–æ–∫—Ç—è–±—Ä—è', '–Ω–æ—è–±—Ä—è', '–¥–µ–∫–∞–±—Ä—è'];
  
  return `${days[now.getDay()]}, ${now.getDate()} ${months[now.getMonth()]}`;
};

// –°—Ç–∏–ª–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
const cardStyle = {
  background: '#fff',
  borderRadius: 16,
  padding: 20,
  marginBottom: 16,
  boxShadow: '0 2px 12px rgba(0, 0, 0, 0.08)',
  border: '1px solid #f0f0f0',
  width: '100%',
  boxSizing: 'border-box'
};

const headerStyle = {
  fontSize: 20,
  fontWeight: 700,
  color: '#1a1a1a',
  marginBottom: 16,
  display: 'flex',
  alignItems: 'center',
  gap: 8
};

const checkboxButtonStyle = (completed) => ({
  padding: '8px 16px',
  borderRadius: 8,
  border: '1px solid #e0e7ff',
  background: completed ? '#e0e7ff' : '#fff',
  color: completed ? '#2196f3' : '#666',
  fontSize: 14,
  fontWeight: 600,
  cursor: 'pointer',
  transition: 'all 0.2s ease',
  marginTop: 8
});

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–∏–µ–º–∞ –ø–∏—â–∏ —Å –≥—Ä–∞–º–º–æ–≤–∫–∞–º–∏
const MealCard = ({ meal, index, isCompleted, onToggleComplete }) => {
  const [showIngredients, setShowIngredients] = useState(false);

  // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–ª—é–¥–µ (–Ω–∞–∑–≤–∞–Ω–∏–µ + –≥—Ä–∞–º–º–æ–≤–∫–∏) 
  const mealInfo = meal.meal || { name: meal.menu || '–ù–µ —É–∫–∞–∑–∞–Ω–æ', ingredients: [] };
  const mealName = typeof mealInfo === 'string' ? mealInfo : mealInfo.name;
  const ingredients = typeof mealInfo === 'object' && mealInfo.ingredients ? mealInfo.ingredients : [];

  const checkboxButtonStyle = (completed) => ({
    padding: '8px 16px',
    backgroundColor: completed ? '#22c55e' : '#f1f5f9',
    color: completed ? 'white' : '#64748b',
    border: 'none',
    borderRadius: 6,
    fontSize: 14,
    fontWeight: 500,
    cursor: 'pointer',
    transition: 'all 0.2s ease',
    width: '100%'
  });

  return (
    <div style={{
      marginBottom: 12,
      padding: 12,
      background: '#f8fafc',
      borderRadius: 8,
      border: '1px solid #e2e8f0'
    }}>
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–∏–µ–º–∞ –ø–∏—â–∏ */}
      <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: 8 }}>
        <div style={{ fontSize: 16, fontWeight: 600, color: '#1a1a1a' }}>
          {meal.type}
        </div>
        <div style={{ fontSize: 14, color: '#666' }}>
          {meal.calories || 0} –∫–∫–∞–ª
        </div>
      </div>

      {/* –ù–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞ */}
      <div style={{ fontSize: 14, color: '#666', marginBottom: 8, fontWeight: 500 }}>
        {mealName}
      </div>

      {/* –ö–Ω–æ–ø–∫–∞ –¥–ª—è —Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤ */}
      {ingredients.length > 0 && (
        <button
          onClick={() => setShowIngredients(!showIngredients)}
          style={{
            padding: '6px 12px',
            backgroundColor: '#e2e8f0',
            color: '#64748b',
            border: 'none',
            borderRadius: 4,
            fontSize: 12,
            cursor: 'pointer',
            marginBottom: 8,
            display: 'flex',
            alignItems: 'center',
            gap: 4
          }}
        >
          üìä {showIngredients ? '–°–∫—Ä—ã—Ç—å –≥—Ä–∞–º–º–æ–≤–∫–∏' : '–ü–æ–∫–∞–∑–∞—Ç—å –≥—Ä–∞–º–º–æ–≤–∫–∏'}
          <span style={{ transform: showIngredients ? 'rotate(180deg)' : 'rotate(0deg)', transition: 'transform 0.2s' }}>
            ‚ñº
          </span>
        </button>
      )}

      {/* –°–ø–∏—Å–æ–∫ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤ —Å –≥—Ä–∞–º–º–æ–≤–∫–∞–º–∏ */}
      {showIngredients && ingredients.length > 0 && (
        <div style={{
          backgroundColor: '#fff',
          border: '1px solid #d1d5db',
          borderRadius: 6,
          padding: 8,
          marginBottom: 8
        }}>
          <div style={{ fontSize: 12, fontWeight: 600, color: '#374151', marginBottom: 6 }}>
            –°–æ—Å—Ç–∞–≤:
          </div>
          {ingredients.map((ingredient, idx) => (
            <div key={idx} style={{
              display: 'flex',
              justifyContent: 'space-between',
              alignItems: 'center',
              padding: '4px 0',
              borderBottom: idx < ingredients.length - 1 ? '1px solid #f3f4f6' : 'none',
              fontSize: 11,
              color: '#6b7280'
            }}>
              <span>{ingredient.name}</span>
              <span style={{ fontWeight: 500, color: '#374151' }}>
                {ingredient.amount} {ingredient.unit}
              </span>
            </div>
          ))}
        </div>
      )}

      {/* –ö–Ω–æ–ø–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è */}
      <button
        onClick={onToggleComplete}
        style={checkboxButtonStyle(isCompleted)}
      >
        {isCompleted ? '‚úÖ –°—ä–µ–ª' : 'üçΩÔ∏è –°—ä–µ—Å—Ç—å'}
      </button>
    </div>
  );
};

export default function TodayBlock({ day, answers, onBackToWeek, programId, isPremium, activatePremium, setIsPaymentShown }) {
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ –ø–ª–∞–Ω–∞
  const [personalPlan, setPersonalPlan] = useState(null);
  const [loadingPlan, setLoadingPlan] = useState(false);
  const [planError, setPlanError] = useState(null);
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —á–∞—Ç–∞ —Å –î–∏–∞–Ω–æ–π
  const [showDianaChat, setShowDianaChat] = useState(false);

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    if (programId) {
      loadTodayPlan();
    }
  }, [programId]);

  // –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –ø–ª–∞–Ω–∞ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è
  const loadTodayPlan = async () => {
    if (!programId) return;
    
    setLoadingPlan(true);
    setPlanError(null);
    
    try {
      console.log('üìÖ –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–ª–∞–Ω –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–º—ã:', programId);
      
      // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑ localStorage (–¥–µ–º–æ –≤–µ—Ä—Å–∏—è)
      const localProgram = localStorage.getItem(`program_${programId}`);
      if (localProgram) {
        const program = JSON.parse(localProgram);
        console.log('üíæ –ù–∞–π–¥–µ–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –≤ localStorage:', program);
        
        const today = new Date().toISOString().slice(0, 10);
        const todayPlan = program.days.find(d => d.date === today);
        
        if (todayPlan) {
          console.log('‚úÖ –ü–ª–∞–Ω –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –∑–∞–≥—Ä—É–∂–µ–Ω –∏–∑ localStorage:', todayPlan);
          console.log('üéØ –¶–µ–ª—å –ø–æ —à–∞–≥–∞–º –∏–∑ –ø–ª–∞–Ω–∞:', todayPlan.dailyStepsGoal);
          console.log('üé• –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π –≤ –ø–ª–∞–Ω–µ:', todayPlan.workout?.exercises);
          setPersonalPlan(todayPlan);
          setLoadingPlan(false);
          return;
        } else {
          // –ï—Å–ª–∏ —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å –Ω–µ –Ω–∞–π–¥–µ–Ω, –±–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π –¥–µ–Ω—å –ø—Ä–æ–≥—Ä–∞–º–º—ã
          const firstDay = program.days[0];
          if (firstDay) {
            console.log('üìÖ –°–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–≤—ã–π –¥–µ–Ω—å –ø—Ä–æ–≥—Ä–∞–º–º—ã:', firstDay);
            console.log('üéØ –¶–µ–ª—å –ø–æ —à–∞–≥–∞–º –∏–∑ –ø–µ—Ä–≤–æ–≥–æ –¥–Ω—è:', firstDay.dailyStepsGoal);
            console.log('üé• –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π –≤ –ø–µ—Ä–≤–æ–º –¥–Ω–µ:', firstDay.workout?.exercises);
            setPersonalPlan(firstDay);
            setLoadingPlan(false);
            return;
          }
        }
      }
      
      // –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –≤ localStorage, –ø—Ä–æ–±—É–µ–º –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É
      const API_URL = process.env.REACT_APP_BACKEND_URL || 'https://dianafit.onrender.com';
      const response = await fetch(`${API_URL}/api/program/today?programId=${programId}`);
      const data = await response.json();
      
      if (data.success) {
        console.log('‚úÖ –ü–ª–∞–Ω –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –∑–∞–≥—Ä—É–∂–µ–Ω —Å —Å–µ—Ä–≤–µ—Ä–∞:', data.plan);
        setPersonalPlan(data.plan);
      } else {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–ª–∞–Ω–∞:', data.error);
        setPlanError(data.error);
      }
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø–ª–∞–Ω–∞:', error);
      setPlanError('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É');
    } finally {
      setLoadingPlan(false);
    }
  };

  // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å, –∏–Ω–∞—á–µ –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π –¥–µ–Ω—å –∏–ª–∏ –º–æ–∫
  const currentDay = personalPlan || day || {
    date: '2024-06-03',
    title: '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫',
    workout: { title: '–î–æ–º–∞—à–Ω—è—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ ‚Ññ2', exercises: [ { name: '–ü—Ä–∏—Å–µ–¥–∞–Ω–∏—è', reps: 15 }, { name: '–û—Ç–∂–∏–º–∞–Ω–∏—è', reps: 10 } ] },
    meals: [ 
      { type: '–ó–∞–≤—Ç—Ä–∞–∫', menu: '–û–≤—Å—è–Ω–∫–∞ —Å —è–≥–æ–¥–∞–º–∏', calories: 320 },
      { type: '–ü–µ—Ä–µ–∫—É—Å', menu: '–ì—Ä–µ—á–µ—Å–∫–∏–π –π–æ–≥—É—Ä—Ç —Å –æ—Ä–µ—Ö–∞–º–∏', calories: 180 },
      { type: '–û–±–µ–¥', menu: '–ö—É—Ä–∏—Ü–∞ —Å —Ä–∏—Å–æ–º –∏ –æ–≤–æ—â–∞–º–∏', calories: 450 },
      { type: '–ü–æ–ª–¥–Ω–∏–∫', menu: '–Ø–±–ª–æ–∫–æ —Å –∞—Ä–∞—Ö–∏—Å–æ–≤–æ–π –ø–∞—Å—Ç–æ–π', calories: 200 },
      { type: '–£–∂–∏–Ω', menu: '–ó–∞–ø–µ—á–µ–Ω–Ω–∞—è —Ä—ã–±–∞ —Å —Å–∞–ª–∞—Ç–æ–º', calories: 380 }
    ],
    completed: false,
    dailySteps: 0, // –£–±–∏—Ä–∞–µ–º –º–æ–∫ –¥–∞–Ω–Ω—ã–µ - —Ç–æ–ª—å–∫–æ —Ä–µ–∞–ª—å–Ω—ã–µ —à–∞–≥–∏
    dailyStepsGoal: 10000
  };
  
  // –õ–æ–≥–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
  console.log('üèãÔ∏è‚Äç‚ôÄÔ∏è TodayBlock Debug:', {
    personalPlan: !!personalPlan,
    dayProp: !!day,
    currentDayWorkout: currentDay.workout,
    currentDayLocation: currentDay.workout?.location,
    currentDayExercises: currentDay.workout?.exercises?.map(ex => ex.name)
  });

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –ª–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∞ —Å–µ–≥–æ–¥–Ω—è –∏–ª–∏ –ø–æ–∑–∂–µ
  const programStartsLater = answers && answers.start_date && new Date(answers.start_date) > new Date();
  
  const [completedExercises, setCompletedExercises] = useState(
    currentDay.workout?.exercises.map((ex, i) => currentDay.completedExercises?.[i] || false) || []
  );
  const [completedMeals, setCompletedMeals] = useState(
    currentDay.meals?.map((m, i) => currentDay.completedMealsArr?.[i] || false) || []
  );
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∑–∞–ø—É—â–µ–Ω–æ –ª–∏ –Ω–∞ –º–æ–±–∏–ª—å–Ω–æ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ
  const isMobileDevice = /Android|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
  const hasTelegramWebApp = window.Telegram?.WebApp;
  
  const [dailySteps, setDailySteps] = useState(() => {
    // –ï—Å–ª–∏ —ç—Ç–æ –∫–æ–º–ø—å—é—Ç–µ—Ä –±–µ–∑ Telegram WebApp, —Å—Ä–∞–∑—É —Å—Ç–∞–≤–∏–º 0
    if (!isMobileDevice && !hasTelegramWebApp) {
      console.log('üñ•Ô∏è –ö–æ–º–ø—å—é—Ç–µ—Ä - —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º dailySteps = 0');
      return 0;
    }
    // –ù–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö —Å—Ç–∞—Ä—Ç—É–µ–º —Å 0, –¥–∞–Ω–Ω—ã–µ –ø–æ–¥—Ç—è–Ω—É—Ç—Å—è –∏–∑ getStepsFromDevice
    console.log('üì± –ú–æ–±–∏–ª—å–Ω–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ - —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º dailySteps = 0');
    return 0;
  });
  const [stepsGoal] = useState(() => {
    const goal = currentDay.dailyStepsGoal || 10000;
    
    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º 10000, –µ—Å–ª–∏ —Ü–µ–ª—å –º–µ–Ω—å—à–µ –∏–ª–∏ –±–æ–ª—å—à–µ —Ä–∞–∑—É–º–Ω—ã—Ö –ø—Ä–µ–¥–µ–ª–æ–≤
    const correctedGoal = (goal < 5000 || goal > 15000) ? 10000 : goal;
    
    console.log('üéØ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ü–µ–ª—å –ø–æ —à–∞–≥–∞–º:', {
      originalGoal: goal,
      correctedGoal,
      fromCurrentDay: currentDay.dailyStepsGoal,
      currentDaySource: personalPlan ? 'personalPlan' : day ? 'day prop' : 'mock',
      currentDay: currentDay
    });
    return correctedGoal;
  });
  const [stepsError, setStepsError] = useState(null);
  const [isLoadingSteps, setIsLoadingSteps] = useState(false);
  const [aiAnalysis, setAiAnalysis] = useState('');
  const [loadingAI, setLoadingAI] = useState(false);
  
  // –ü–æ–ª—É—á–∞–µ–º —Å–ª—É—á–∞–π–Ω—É—é –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—É—é —Ü–∏—Ç–∞—Ç—É
  const todayQuote = motivationalQuotes[Math.floor(Math.random() * motivationalQuotes.length)];

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –æ —à–∞–≥–∞—Ö —Å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
  const getStepsFromDevice = async () => {
    console.log('üö∂ –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ —à–∞–≥–∞—Ö...');
    setIsLoadingSteps(true);
    setStepsError(null);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—â–µ–Ω–æ –ª–∏ –Ω–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–µ - –µ—Å–ª–∏ –¥–∞, –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—á–∏—â–∞–µ–º localStorage
    const isMobile = /Android|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
    const hasTelegram = window.Telegram?.WebApp;
    
    if (!isMobile && !hasTelegram) {
      console.log('üñ•Ô∏è –ö–æ–º–ø—å—é—Ç–µ—Ä –æ–±–Ω–∞—Ä—É–∂–µ–Ω - –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—á–∏—â–∞–µ–º localStorage');
      localStorage.removeItem('dianafit_daily_steps');
      localStorage.removeItem('dianafit_steps_date');
      setDailySteps(0);
      setStepsError('–ü–æ–¥—Å—á–µ—Ç —à–∞–≥–æ–≤ –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö');
      setIsLoadingSteps(false);
      return;
    }
    
    // –û–±—ä—è–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ –æ–±–ª–∞—Å—Ç–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏ —Ñ—É–Ω–∫—Ü–∏–∏
    const savedSteps = localStorage.getItem('dianafit_daily_steps');
    const savedDate = localStorage.getItem('dianafit_steps_date');
    const today = new Date().toDateString();
    console.log('üì± LocalStorage –¥–∞–Ω–Ω—ã–µ:', { savedSteps, savedDate, today });
    
    // –û—á–∏—â–∞–µ–º —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ localStorage
    if (savedDate && savedDate !== today) {
      console.log('üßπ –û—á–∏—â–∞–µ–º —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ localStorage');
      localStorage.removeItem('dianafit_daily_steps');
      localStorage.removeItem('dianafit_steps_date');
    }
    
    try {
      
      // 1. –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ Telegram WebApp API
      if (window.Telegram?.WebApp) {
        const tg = window.Telegram.WebApp;
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –¥–æ—Å—Ç—É–ø –∫ –¥–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if (tg.initDataUnsafe?.user) {
          console.log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å Telegram –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ –∑–¥–æ—Ä–æ–≤—å–µ...');
          
          // –í –±—É–¥—É—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö Telegram –º–æ–∂–µ—Ç –¥–æ–±–∞–≤–∏—Ç—å Health API
          if (tg.initDataUnsafe.user.health_data?.steps) {
            const steps = tg.initDataUnsafe.user.health_data.steps;
            setDailySteps(steps);
            saveStepsToStorage(steps);
            console.log('–®–∞–≥–∏ –ø–æ–ª—É—á–µ–Ω—ã –∏–∑ Telegram WebApp:', steps);
            return;
          }
        }
      }

      // 2. –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ Navigator API
      if ('navigator' in window && navigator.permissions) {
        try {
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ –¥–æ—Å—Ç—É–ø –∫ –¥–∞–Ω–Ω—ã–º –æ –¥–≤–∏–∂–µ–Ω–∏–∏
          const accelerometerPermission = await navigator.permissions.query({ name: 'accelerometer' });
          const gyroscopePermission = await navigator.permissions.query({ name: 'gyroscope' });
          
          if (accelerometerPermission.state === 'granted' && gyroscopePermission.state === 'granted') {
            console.log('–†–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ –¥–∞—Ç—á–∏–∫–∏ –ø–æ–ª—É—á–µ–Ω—ã');
            
            // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—ã–ª–∞ –±—ã –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Health API —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
            // –ù–∞–ø—Ä–∏–º–µ—Ä, Google Fit API, Apple HealthKit —á–µ—Ä–µ–∑ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
            if (window.HealthDataAPI) {
              const healthData = await window.HealthDataAPI.getStepsToday();
              if (healthData && healthData.steps !== undefined) {
                setDailySteps(healthData.steps);
                saveStepsToStorage(healthData.steps);
                console.log('–®–∞–≥–∏ –ø–æ–ª—É—á–µ–Ω—ã –∏–∑ Health API:', healthData.steps);
                return;
              }
            }
          }
        } catch (e) {
          console.log('–î–∞—Ç—á–∏–∫–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã:', e);
        }
      }

      // 3. –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ Google Fit API
      try {
        const googleFitSteps = await tryGoogleFitAPI();
        if (googleFitSteps !== null && googleFitSteps >= 0) {
          setDailySteps(googleFitSteps);
          saveStepsToStorage(googleFitSteps);
          console.log('–®–∞–≥–∏ –ø–æ–ª—É—á–µ–Ω—ã –∏–∑ Google Fit:', googleFitSteps);
          return;
        }
      } catch (error) {
        console.log('Google Fit –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω:', error);
      }

      // 4. –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ Web API Health
      if ('webkitRequestFileSystem' in window || 'requestFileSystem' in window) {
        // –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –±—Ä–∞—É–∑–µ—Ä—ã –º–æ–≥—É—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å –¥–æ—Å—Ç—É–ø –∫ –¥–∞–Ω–Ω—ã–º —Ñ–∏—Ç–Ω–µ—Å–∞
        console.log('–ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ –¥–∞–Ω–Ω—ã–º —Ñ–∏—Ç–Ω–µ—Å–∞ —á–µ—Ä–µ–∑ –±—Ä–∞—É–∑–µ—Ä...');
      }

      // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞ —Å–µ–≥–æ–¥–Ω—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω–∏ –∞–∫—Ç—É–∞–ª—å–Ω—ã
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–∂–µ –æ–±—ä—è–≤–ª–µ–Ω–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ savedSteps, savedDate, today
      
      // –¢–û–õ–¨–ö–û –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
      if (savedSteps && savedDate === today) {
        setDailySteps(parseInt(savedSteps));
        console.log('–î–∞–Ω–Ω—ã–µ –æ —à–∞–≥–∞—Ö –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ –∫—ç—à–∞:', savedSteps);
        return;
      }

      // 6. –ï—Å–ª–∏ –Ω–∏–∫–∞–∫–∏–µ API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º 0 –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
      setDailySteps(0);
      saveStepsToStorage(0);
      setStepsError('–î–∞–Ω–Ω—ã–µ –æ —à–∞–≥–∞—Ö –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã. –¢—Ä–µ–±—É–µ—Ç—Å—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Ñ–∏—Ç–Ω–µ—Å-—Ç—Ä–µ–∫–µ—Ä–æ–º.');
      console.log('API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ —à–∞–≥–∞—Ö –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã');
      
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ —à–∞–≥–∞—Ö:', error);
      setStepsError('–û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –¥–∞–Ω–Ω—ã–º –æ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏');
      
      // –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (–∏—Å–ø–æ–ª—å–∑—É–µ–º —É–∂–µ –æ–±—ä—è–≤–ª–µ–Ω–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ)
      if (savedSteps && savedDate === today) {
        setDailySteps(parseInt(savedSteps));
      } else {
        setDailySteps(0);
        saveStepsToStorage(0);
      }
    } finally {
      setIsLoadingSteps(false);
    }
  };

  const saveStepsToStorage = (steps) => {
    const today = new Date().toDateString();
    localStorage.setItem('dianafit_daily_steps', steps.toString());
    localStorage.setItem('dianafit_steps_date', today);
  };

  // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏ (–º–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å –∏–∑ –∫–æ–Ω—Å–æ–ª–∏)
  const clearAllStepsData = () => {
    console.log('üßπ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö –æ —à–∞–≥–∞—Ö');
    localStorage.removeItem('dianafit_daily_steps');
    localStorage.removeItem('dianafit_steps_date');
    setDailySteps(0);
    console.log('‚úÖ –í—Å–µ –¥–∞–Ω–Ω—ã–µ –æ —à–∞–≥–∞—Ö –æ—á–∏—â–µ–Ω—ã');
  };
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Å–µ—Ö –ø—Ä–æ–≥—Ä–∞–º–º –≤ localStorage
  const checkAllPrograms = () => {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã –≤ localStorage:');
    for (let i = 0; i < localStorage.length; i++) {
      const key = localStorage.key(i);
      if (key && key.startsWith('program_')) {
        const program = JSON.parse(localStorage.getItem(key));
        console.log(`üìã –ü—Ä–æ–≥—Ä–∞–º–º–∞ ${key}:`, {
          days: program.days?.length,
          firstDayStepsGoal: program.days?.[0]?.dailyStepsGoal,
          allStepsGoals: program.days?.map(d => d.dailyStepsGoal)
        });
      }
    }
  };
  
  // –î–µ–ª–∞–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –≥–ª–æ–±–∞–ª—å–Ω–æ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
  window.clearStepsData = clearAllStepsData;
  window.checkPrograms = checkAllPrograms;

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ —à–∞–≥–∞—Ö –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    // –ü—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º –∏ –æ—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ
    const clearOldStepsData = () => {
      const savedDate = localStorage.getItem('dianafit_steps_date');
      const today = new Date().toDateString();
      
      console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ localStorage:', {
        savedDate, 
        today, 
        savedSteps: localStorage.getItem('dianafit_daily_steps')
      });
      
      if (savedDate && savedDate !== today) {
        console.log('üßπ –û—á–∏—â–∞–µ–º —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ –¥–∞–Ω–Ω—ã–µ –æ —à–∞–≥–∞—Ö –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ');
        localStorage.removeItem('dianafit_daily_steps');
        localStorage.removeItem('dianafit_steps_date');
      }
      
      // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞: –µ—Å–ª–∏ –Ω–µ—Ç –¥–∞—Ç—ã, –Ω–æ –µ—Å—Ç—å —à–∞–≥–∏ - —Ç–æ–∂–µ –æ—á–∏—â–∞–µ–º
      if (!savedDate && localStorage.getItem('dianafit_daily_steps')) {
        console.log('üßπ –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –±–µ–∑ –¥–∞—Ç—ã');
        localStorage.removeItem('dianafit_daily_steps');
      }
    };
    
    clearOldStepsData();
    getStepsFromDevice();
  }, []);

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ —à–∞–≥–∞—Ö –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
  useEffect(() => {
    const interval = setInterval(() => {
      getStepsFromDevice();
    }, 5 * 60 * 1000); // 5 –º–∏–Ω—É—Ç

    return () => clearInterval(interval);
  }, []);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Google Fit API (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω)
  const tryGoogleFitAPI = async () => {
    try {
      if (window.gapi && window.gapi.load) {
        return new Promise((resolve, reject) => {
          window.gapi.load('auth2', {
            callback: () => {
              // Google Fit API –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è
              window.gapi.load('client', async () => {
                try {
                  await window.gapi.client.init({
                    apiKey: 'YOUR_API_KEY', // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –∏–∑ .env
                    clientId: 'YOUR_CLIENT_ID',
                    discoveryDocs: ['https://www.googleapis.com/discovery/v1/apis/fitness/v1/rest'],
                    scope: 'https://www.googleapis.com/auth/fitness.activity.read'
                  });

                  const authInstance = window.gapi.auth2.getAuthInstance();
                  if (authInstance.isSignedIn.get()) {
                    const today = new Date();
                    const startTime = new Date(today.getFullYear(), today.getMonth(), today.getDate()).getTime();
                    const endTime = Date.now();

                    const response = await window.gapi.client.fitness.users.dataSources.dataPointChanges.list({
                      userId: 'me',
                      dataSourceId: 'derived:com.google.step_count.delta:com.google.android.gms:estimated_steps',
                      startTime: startTime * 1000000, // –Ω—Å
                      endTime: endTime * 1000000
                    });

                    if (response.result.point && response.result.point.length > 0) {
                      const totalSteps = response.result.point.reduce((sum, point) => {
                        return sum + (point.value[0].intVal || 0);
                      }, 0);
                      resolve(totalSteps);
                    } else {
                      resolve(0);
                    }
                  } else {
                    reject('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –≤ Google');
                  }
                } catch (error) {
                  reject(error);
                }
              });
            },
            onerror: () => reject('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ Google API')
          });
        });
      }
    } catch (error) {
      console.log('Google Fit API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω:', error);
      return null;
    }
    return null;
  };

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º —à–∞–≥–∏ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏
  useEffect(() => {
    if (dailySteps > 0) {
      saveStepsToStorage(dailySteps);
    }
  }, [dailySteps]);

  // –í—ã—á–∏—Å–ª—è–µ–º –æ–±—â–∏–µ –∫–∞–ª–æ—Ä–∏–∏ –∏ –ë–ñ–£
  const totalCalories = currentDay.meals?.reduce((sum, meal) => sum + (meal.calories || 0), 0) || 1530;
  const targetCalories = answers?.targetCalories || 1800; // –ò–∑ –∫–≤–∏–∑–∞
  
  const products = currentDay.meals
    ? Array.from(new Set(currentDay.meals.flatMap(m => {
        const mealInfo = m.meal || { name: m.menu || '', ingredients: [] };
        if (typeof mealInfo === 'string') {
          return mealInfo.split(/,| /).map(s => s.trim()).filter(Boolean);
        } else if (mealInfo.ingredients) {
          return mealInfo.ingredients.map(ing => ing.name);
        } else {
          return [mealInfo.name || ''];
        }
      })))
    : [];

  const localProgramId = programId || currentDay.programId;

  async function handleExerciseChange(idx) {
    const updated = completedExercises.map((v, i) => i === idx ? !v : v);
    setCompletedExercises(updated);
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Ç–∞–∫—Ç–∏–ª—å–Ω—É—é –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å (–≤–∏–±—Ä–∞—Ü–∏—é) –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏
    if (updated[idx] && navigator.vibrate) {
      navigator.vibrate(100); // 100ms –≤–∏–±—Ä–∞—Ü–∏—è –ø—Ä–∏ –æ—Ç–º–µ—Ç–∫–µ –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ
    }
    
    if (localProgramId) {
      try {
        await fetch(`${API_URL}/api/program/day-complete`, {
          method: 'PATCH',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ programId: localProgramId, date: currentDay.date, completedExercises: updated })
        });
        console.log('‚úÖ –°—Ç–∞—Ç—É—Å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω:', { idx, completed: updated[idx] });
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:', error);
      }
    }
  }

  async function handleMealChange(idx) {
    const updated = completedMeals.map((v, i) => i === idx ? !v : v);
    setCompletedMeals(updated);
    if (localProgramId) {
      await fetch(`${API_URL}/api/program/day-complete`, {
        method: 'PATCH',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ programId: localProgramId, date: currentDay.date, completedMealsArr: updated })
      });
    }
  }

  async function handleAnalyzeClick() {
    setLoadingAI(true);
    setAiAnalysis('');
    try {
      const res = await fetch(`${API_URL}/api/calculate-plan`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          day,
          completedExercises,
          completedMeals,
          feedback: 'analyze-today'
        })
      });
      const data = await res.json();
      setAiAnalysis(data.plan || '–ù–µ—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç –ò–ò');
    } catch (e) {
      setAiAnalysis('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ –ò–ò');
    }
    setLoadingAI(false);
  }

  return (
    <div style={{ 
      width: '100vw', 
      minHeight: '100dvh', 
      display: 'flex', 
      flexDirection: 'column', 
      background: 'linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%)' 
    }}>
      {/* –®–∞–ø–∫–∞ —Å –∫–Ω–æ–ø–∫–æ–π –Ω–∞–∑–∞–¥ */}
      <div style={{ 
        padding: '16px 20px', 
        background: '#fff', 
        borderBottom: '1px solid #e2e8f0'
      }}>
        <button
          onClick={onBackToWeek}
          style={{
            fontSize: 16,
            padding: '8px 16px',
            borderRadius: 8,
            background: '#e0e7ff',
            border: 'none',
            fontWeight: 600,
            cursor: 'pointer',
            color: '#2196f3',
            whiteSpace: 'nowrap'
          }}
        >‚Üê –ö —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é</button>
        
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø–æ–¥ –∫–Ω–æ–ø–∫–æ–π */}
        <div style={{ 
          fontSize: 20, 
          fontWeight: 700, 
          color: '#1a1a1a', 
          textAlign: 'center',
          marginTop: 12
        }}>
          –¢–µ–∫—É—â–∏–π –¥–µ–Ω—å
        </div>
      </div>

      <div style={{ 
        flex: 1, 
        padding: '20px', 
        maxWidth: 480, 
        margin: '0 auto', 
        width: '100%',
        boxSizing: 'border-box'
      }}>
        
        {loadingPlan ? (
          // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ –ø–ª–∞–Ω–∞
          <div style={{ ...cardStyle, textAlign: 'center' }}>
            <div style={{ fontSize: 18, fontWeight: 600, marginBottom: 16, color: '#1a1a1a' }}>
              üìÖ –ó–∞–≥—Ä—É–∂–∞–µ–º –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω...
            </div>
            <div style={{ fontSize: 14, color: '#666' }}>
              –ü–æ–¥–±–∏—Ä–∞–µ–º —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –∏ –ø–∏—Ç–∞–Ω–∏–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è –≤–∞—Å
            </div>
          </div>
        ) : planError ? (
          // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –∑–∞–≥—Ä—É–∑–∫–∏
          <div style={{ ...cardStyle, textAlign: 'center' }}>
            <div style={{ fontSize: 18, fontWeight: 600, marginBottom: 16, color: '#e74c3c' }}>
              ‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–ª–∞–Ω–∞
            </div>
            <div style={{ fontSize: 14, color: '#666', marginBottom: 16 }}>
              {planError}
            </div>
            <button
              onClick={loadTodayPlan}
              style={{
                padding: '10px 20px',
                borderRadius: 8,
                background: '#3498db',
                border: 'none',
                color: '#fff',
                fontWeight: 600,
                cursor: 'pointer'
              }}
            >
              –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
            </button>
          </div>
        ) : programStartsLater ? (
          // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –Ω–∞—á–Ω–µ—Ç—Å—è –ø–æ–∑–∂–µ
          <div style={{ ...cardStyle, textAlign: 'center' }}>
            <div style={{ fontSize: 24, fontWeight: 700, marginBottom: 16, color: '#1a1a1a' }}>
              –ü—Ä–æ–≥—Ä–∞–º–º–∞ –Ω–∞—á–Ω–µ—Ç—Å—è –ø–æ–∑–∂–µ
            </div>
            <div style={{ fontSize: 16, color: '#666', lineHeight: 1.5, marginBottom: 20 }}>
              –í—ã –≤—ã–±—Ä–∞–ª–∏ –Ω–∞—á–∞—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ {answers?.start_date ? new Date(answers.start_date).toLocaleDateString('ru-RU') : '–≤ –≤—ã–±—Ä–∞–Ω–Ω—É—é –¥–∞—Ç—É'}. 
              –î–æ —ç—Ç–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –º–æ–∂–µ—Ç–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –Ω–µ–¥–µ–ª—å–Ω—ã–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º.
            </div>
            <div style={{ 
              background: '#e3f0ff', 
              borderRadius: 12, 
              padding: '16px', 
              border: '1px solid #2196f3',
              color: '#1976d2',
              fontSize: 14,
              fontWeight: 500 
            }}>
              üí° –ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ—Å—å –∑–∞—Ä–∞–Ω–µ–µ: –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –∏ —Å–æ—Å—Ç–∞–≤—å—Ç–µ —Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫ –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –ø–∏—Ç–∞–Ω–∏—è
            </div>
          </div>
        ) : (
          <>
            {/* 1. –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –¥–∞—Ç–æ–π */}
            <div style={{ ...cardStyle, textAlign: 'center', marginBottom: 24 }}>
              <div style={{ fontSize: 14, color: '#666', marginBottom: 4 }}>–°–µ–≥–æ–¥–Ω—è</div>
              <div style={{ fontSize: 24, fontWeight: 700, color: '#1a1a1a' }}>
                {getCurrentDateString()}
              </div>
            </div>

            {/* 2. –ë–ª–æ–∫ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ */}
            <div style={cardStyle}>
              <div style={headerStyle}>
                üèãÔ∏è‚Äç‚ôÄÔ∏è –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞
              </div>
              
              {currentDay.workout && currentDay.workout.exercises && currentDay.workout.exercises.length > 0 ? (
                <>
                  <div style={{ fontSize: 18, fontWeight: 600, color: '#1a1a1a', marginBottom: 16 }}>
                    {currentDay.workout.title || '–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞'}
                  </div>
                  
                  {currentDay.workout.exercises.map((ex, i) => {
                    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å, –∏–Ω–∞—á–µ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
                    const location = ex.location || currentDay.workout.location || getWorkoutLocation(currentDay.workout.title || currentDay.workout.name);
                    const dayId = ex.dayId || getDayId(currentDay.workout.title || currentDay.workout.name, location);
                    const exerciseName = getExerciseEnglishName(ex.name);
                    
                    console.log('üé• TodayBlock –≤–∏–¥–µ–æ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:', {
                      exerciseName: ex.name,
                      location,
                      dayId,
                      exerciseEnglishName: exerciseName,
                      exerciseObject: ex,
                      workoutObject: currentDay.workout,
                      fullVideoPath: location && dayId && exerciseName ? `/videos/${location}/${dayId}/${exerciseName}.mp4` : null
                    });
                    
                    return (
                      <div key={i} style={{ 
                        marginBottom: 20, 
                        padding: 16, 
                        background: '#f8fafc', 
                        borderRadius: 12,
                        border: '1px solid #e2e8f0'
                      }}>
                        <div style={{ fontSize: 16, fontWeight: 600, marginBottom: 8, color: '#1a1a1a' }}>
                          {ex.name}
                        </div>
                        <div style={{ fontSize: 14, color: '#666', marginBottom: 12 }}>
                          {ex.reps} –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π
                        </div>
                        
                        {(location && dayId && (ex.videoName || exerciseName)) ? (
                          <VideoPlayer 
                            location={location}
                            dayId={dayId}
                            exerciseName={ex.videoName || exerciseName}
                            title={ex.name}
                          />
                        ) : (
                          <div style={{ 
                            display: 'flex',
                            justifyContent: 'center',
                            marginBottom: 12
                          }}>
                            <div style={{
                              width: '200px',
                              height: '300px',
                              background: '#e2e8f0', 
                              borderRadius: 12, 
                              display: 'flex', 
                              flexDirection: 'column',
                              alignItems: 'center', 
                              justifyContent: 'center', 
                              color: '#94a3b8', 
                              fontSize: 14
                            }}>
                              <div style={{ fontSize: '48px', marginBottom: '8px' }}>üé•</div>
                              <div>–í–∏–¥–µ–æ —Å–∫–æ—Ä–æ</div>
                              <div style={{ fontSize: '10px', marginTop: '8px', textAlign: 'center' }}>
                                –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –¥–∞–Ω–Ω—ã–µ:<br/>
                                location: {location || '–Ω–µ—Ç'}<br/>
                                dayId: {dayId || '–Ω–µ—Ç'}<br/>
                                exerciseName: {exerciseName || '–Ω–µ—Ç'}
                              </div>
                            </div>
                          </div>
                        )}
                        
                        <button
                          onClick={() => handleExerciseChange(i)}
                          style={{
                            ...checkboxButtonStyle(completedExercises[i]),
                            width: '100%'
                          }}
                        >
                          {completedExercises[i] ? '‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ' : '‚≠ï –í—ã–ø–æ–ª–Ω–∏—Ç—å'}
                        </button>
                      </div>
                    );
                  })}
                </>
              ) : (
                <div style={{ 
                  textAlign: 'center',
                  padding: 24,
                  background: 'linear-gradient(135deg, #e8f5e8 0%, #f0f8f0 100%)',
                  borderRadius: 12
                }}>
                  <div style={{ fontSize: 48, marginBottom: 12 }}>üåø</div>
                  <div style={{ fontSize: 18, fontWeight: 600, color: '#2d5a2d', marginBottom: 8 }}>
                    –°–µ–≥–æ–¥–Ω—è –¥–µ–Ω—å –æ—Ç–¥—ã—Ö–∞
                  </div>
                  <div style={{ fontSize: 14, color: '#666' }}>
                    –ü—Ä–æ–≥—É–ª—è–π—Å—è 10 000 —à–∞–≥–æ–≤ üí™
                  </div>
                </div>
              )}
            </div>

            {/* 3. –ë–ª–æ–∫ –ø–∏—Ç–∞–Ω–∏—è */}
            <div style={cardStyle}>
              <div style={headerStyle}>
                ü•ó –ü–∏—Ç–∞–Ω–∏–µ –Ω–∞ –¥–µ–Ω—å
              </div>
              
              {/* –ë–ñ–£ –∏ –ö–∞–ª–æ—Ä–∏–∏ */}
              <div style={{ 
                display: 'grid',
                gridTemplateColumns: 'repeat(4, 1fr)',
                gap: 8,
                background: '#f8fafc', 
                padding: 16, 
                borderRadius: 12,
                marginBottom: 16,
                border: '1px solid #e2e8f0'
              }}>
                <div style={{ textAlign: 'center' }}>
                  <div style={{ fontSize: 20, fontWeight: 700, color: '#2196f3' }}>{totalCalories}</div>
                  <div style={{ fontSize: 12, color: '#666' }}>–ö–∫–∞–ª</div>
                </div>
                <div style={{ textAlign: 'center' }}>
                  <div style={{ fontSize: 20, fontWeight: 700, color: '#10b981' }}>120–≥</div>
                  <div style={{ fontSize: 12, color: '#666' }}>–ë–µ–ª–∫–∏</div>
                </div>
                <div style={{ textAlign: 'center' }}>
                  <div style={{ fontSize: 20, fontWeight: 700, color: '#f59e0b' }}>80–≥</div>
                  <div style={{ fontSize: 12, color: '#666' }}>–ñ–∏—Ä—ã</div>
                </div>
                <div style={{ textAlign: 'center' }}>
                  <div style={{ fontSize: 20, fontWeight: 700, color: '#8b5cf6' }}>180–≥</div>
                  <div style={{ fontSize: 12, color: '#666' }}>–£–≥–ª–µ–≤–æ–¥—ã</div>
                </div>
              </div>

              {/* –ü—Ä–∏–µ–º—ã –ø–∏—â–∏ */}
              {currentDay.meals && currentDay.meals.map((meal, i) => (
                <MealCard 
                  key={i} 
                  meal={meal} 
                  index={i} 
                  isCompleted={completedMeals[i]} 
                  onToggleComplete={() => handleMealChange(i)} 
                />
              ))}
            </div>

            {/* 4. –ë–ª–æ–∫ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ */}
            <div style={cardStyle}>
              <div style={{
                ...headerStyle,
                display: 'flex',
                justifyContent: 'space-between',
                alignItems: 'center'
              }}>
                <span>üö∂ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</span>
                <button
                  onClick={getStepsFromDevice}
                  disabled={isLoadingSteps}
                  style={{
                    background: isLoadingSteps 
                      ? 'linear-gradient(135deg, #f1f5f9 0%, #e2e8f0 100%)'
                      : 'linear-gradient(135deg, #4F46E5 0%, #6366F1 100%)',
                    border: 'none',
                    borderRadius: 8,
                    padding: '4px 10px',
                    fontSize: 11,
                    fontWeight: 500,
                    fontFamily: 'Roboto, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", sans-serif',
                    color: isLoadingSteps ? '#64748b' : '#ffffff',
                    cursor: isLoadingSteps ? 'not-allowed' : 'pointer',
                    transition: 'all 0.2s ease',
                    boxShadow: isLoadingSteps 
                      ? '0 1px 3px rgba(0, 0, 0, 0.1)'
                      : '0 2px 6px rgba(79, 70, 229, 0.25)',
                    letterSpacing: '0.2px',
                    display: 'flex',
                    alignItems: 'center',
                    gap: 4,
                    outline: 'none',
                    height: 28
                  }}
                  onMouseEnter={(e) => {
                    if (!isLoadingSteps) {
                      e.target.style.boxShadow = '0 3px 8px rgba(79, 70, 229, 0.35)';
                      e.target.style.background = 'linear-gradient(135deg, #5B52F0 0%, #7C3AED 100%)';
                    }
                  }}
                  onMouseLeave={(e) => {
                    if (!isLoadingSteps) {
                      e.target.style.boxShadow = '0 2px 6px rgba(79, 70, 229, 0.25)';
                      e.target.style.background = 'linear-gradient(135deg, #4F46E5 0%, #6366F1 100%)';
                    }
                  }}
                >
                  <span style={{
                    display: 'inline-block',
                    animation: isLoadingSteps ? 'spin 1s linear infinite' : 'none',
                    fontSize: 10
                  }}>
                    {isLoadingSteps ? '‚ü≥' : 'üîÑ'}
                  </span>
                  <span style={{ fontSize: 11 }}>
                    {isLoadingSteps ? '–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ' : '–û–±–Ω–æ–≤–∏—Ç—å'}
                  </span>
                </button>
              </div>
              
              {stepsError && (
                <div style={{
                  background: '#fee2e2',
                  border: '1px solid #fecaca',
                  borderRadius: 8,
                  padding: 8,
                  marginBottom: 12,
                  fontSize: 12,
                  color: '#dc2626',
                  textAlign: 'center'
                }}>
                  {stepsError}
                </div>
              )}
              
              <div style={{
                display: 'flex',
                justifyContent: 'space-between',
                alignItems: 'center',
                marginBottom: 12
              }}>
                <div style={{ 
                  fontSize: 16, 
                  color: '#1a1a1a',
                  display: 'flex',
                  alignItems: 'center',
                  gap: 8
                }}>
                  –®–∞–≥–∏ —Å–µ–≥–æ–¥–Ω—è
                  {isLoadingSteps && (
                    <div style={{
                      width: 12,
                      height: 12,
                      border: '2px solid #e2e8f0',
                      borderTop: '2px solid #2196f3',
                      borderRadius: '50%',
                      animation: 'spin 1s linear infinite'
                    }} />
                  )}
                </div>
                <div style={{ fontSize: 18, fontWeight: 700, color: dailySteps >= stepsGoal ? '#10b981' : '#2196f3' }}>
                  {dailySteps.toLocaleString()} / {stepsGoal.toLocaleString()}
                </div>
              </div>
              
              {/* –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä —à–∞–≥–æ–≤ */}
              <div style={{ 
                height: 8, 
                background: '#e2e8f0', 
                borderRadius: 4, 
                overflow: 'hidden',
                marginBottom: 12 
              }}>
                <div style={{ 
                  width: `${Math.min((dailySteps / stepsGoal) * 100, 100)}%`, 
                  height: '100%', 
                  background: dailySteps >= stepsGoal ? '#10b981' : '#2196f3',
                  transition: 'width 0.3s ease' 
                }} />
              </div>
              
              <div style={{ fontSize: 14, color: '#666', textAlign: 'center' }}>
                {dailySteps >= stepsGoal ? 
                  'üéâ –¶–µ–ª—å –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–∞! –û—Ç–ª–∏—á–Ω–æ!' : 
                  `–û—Å—Ç–∞–ª–æ—Å—å ${(stepsGoal - dailySteps).toLocaleString()} —à–∞–≥–æ–≤ –¥–æ —Ü–µ–ª–∏`
                }
              </div>
              
              {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∏—Å—Ç–æ—á–Ω–∏–∫–µ –¥–∞–Ω–Ω—ã—Ö */}
              <div style={{
                fontSize: 11,
                color: '#9ca3af',
                textAlign: 'center',
                marginTop: 8,
                fontStyle: 'italic'
              }}>
                –®–∞–≥–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É—é—Ç—Å—è —Å —Ñ–∏—Ç–Ω–µ—Å-—Ç—Ä–µ–∫–µ—Ä–æ–º. –ù–∞–∂–º–∏—Ç–µ "–û–±–Ω–æ–≤–∏—Ç—å" –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
              </div>
            </div>

            {/* 5. –ú–æ—Ç–∏–≤–∞—Ü–∏—è –¥–Ω—è */}
            <div style={{
              ...cardStyle,
              background: 'linear-gradient(135deg, #e0e7ff 0%, #c7d2fe 100%)',
              border: '1px solid #a5b4fc',
              textAlign: 'center',
              marginBottom: 24
            }}>
              <div style={{ fontSize: 24, marginBottom: 12 }}>üí¨</div>
              <div style={{ 
                fontSize: 16, 
                fontStyle: 'italic', 
                color: '#3730a3', 
                lineHeight: 1.4,
                fontWeight: 500
              }}>
                {todayQuote}
              </div>
            </div>
          </>
        )}
      </div>
      
      {/* –ó–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω–∞—è –∫–Ω–æ–ø–∫–∞ –≤—ã–∑–æ–≤–∞ —á–∞—Ç–∞ —Å –î–∏–∞–Ω–æ–π –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É */}
      <button
        onClick={() => {
          if (isPremium) {
            setShowDianaChat(true);
          } else {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ–ø–ª–∞—Ç—ã –¥–ª—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —á–∞—Ç–∞
            if (setIsPaymentShown) {
              setIsPaymentShown(true);
            }
          }
        }}
        style={{
          position: 'fixed',
          top: '20px',
          right: '20px',
          width: '60px',
          height: '60px',
          borderRadius: '50%',
          background: 'none',
          border: 'none',
          cursor: isPremium ? 'pointer' : 'not-allowed',
          display: 'flex',
          alignItems: 'center',
          justifyContent: 'center',
          boxShadow: isPremium 
            ? '0 4px 12px rgba(0, 0, 0, 0.15)'
            : '0 4px 12px rgba(0, 0, 0, 0.1)',
          zIndex: 1000,
          transition: 'all 0.3s ease',
          padding: 0,
          margin: 0,
          outline: 'none'
        }}
        onMouseEnter={(e) => {
          if (isPremium) {
            e.target.style.transform = 'scale(1.05)';
            e.target.style.boxShadow = '0 6px 16px rgba(0, 0, 0, 0.2)';
          }
        }}
        onMouseLeave={(e) => {
          e.target.style.transform = 'scale(1)';
          e.target.style.boxShadow = isPremium 
            ? '0 4px 12px rgba(0, 0, 0, 0.15)'
            : '0 4px 12px rgba(0, 0, 0, 0.1)';
        }}
      >
        {/* –î–∏–∑–∞–π–Ω–µ—Ä—Å–∫–∞—è –∏–∫–æ–Ω–∫–∞ —á–∞—Ç–∞ —Å –î–∏–∞–Ω–æ–π */}
        <img 
          src={chatDianaIcon} 
          alt={isPremium ? "–ß–∞—Ç —Å –î–∏–∞–Ω–æ–π" : "–ß–∞—Ç —Å –î–∏–∞–Ω–æ–π (Premium)"}
          style={{
            width: '100%',
            height: '100%',
            borderRadius: '50%',
            objectFit: 'cover',
            display: 'block',
            filter: isPremium ? 'none' : 'grayscale(100%) brightness(0.7)',
            transition: 'filter 0.3s ease'
          }}
        />
        
        {/* –ó–∞–º–æ—á–µ–∫ –¥–ª—è –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è */}
        {!isPremium && (
          <div style={{
            position: 'absolute',
            bottom: '-2px',
            right: '-2px',
            width: '18px',
            height: '18px',
            borderRadius: '50%',
            background: '#ff6b35',
            display: 'flex',
            alignItems: 'center',
            justifyContent: 'center',
            fontSize: '10px',
            border: '2px solid white'
          }}>
            üîí
          </div>
        )}
      </button>
      
      {/* –î–∏–∞–ª–æ–≥ —á–∞—Ç–∞ —Å –î–∏–∞–Ω–æ–π */}
      {showDianaChat && (
        <DianaChat
          onClose={() => setShowDianaChat(false)}
          isPremium={isPremium}
        />
      )}
    </div>
  );
}
