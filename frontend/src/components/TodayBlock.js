import React, { useState } from 'react';
import VideoPlayer from './VideoPlayer';
import { getWorkoutLocation, getDayId, getExerciseEnglishName } from '../utils/videoUtils';

const API_URL = process.env.REACT_APP_BACKEND_URL || 'https://dianafit.onrender.com';

// –ú–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ü–∏—Ç–∞—Ç—ã –æ—Ç –î–∏–∞–Ω—ã
const motivationalQuotes = [
  "–ù–µ –Ω—É–∂–Ω–æ –±—ã—Ç—å –∏–¥–µ–∞–ª—å–Ω–æ–π. –ù—É–∂–Ω–æ –±—ã—Ç—å —Å—Ç–∞–±–∏–ª—å–Ω–æ–π. ‚Äî –î–∏–∞–Ω–∞",
  "–ö–∞–∂–¥—ã–π –¥–µ–Ω—å ‚Äî —ç—Ç–æ –Ω–æ–≤–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å—Ç–∞—Ç—å –ª—É—á—à–µ. ‚Äî –î–∏–∞–Ω–∞",
  "–¢–≤–æ–µ —Ç–µ–ª–æ –º–æ–∂–µ—Ç. –¢–≤–æ–π —Ä–∞–∑—É–º —Å–æ–º–Ω–µ–≤–∞–µ—Ç—Å—è. –°–ª—É—à–∞–π —Ç–µ–ª–æ. ‚Äî –î–∏–∞–Ω–∞",
  "–ü—Ä–æ–≥—Ä–µ—Å—Å –≤–∞–∂–Ω–µ–µ —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–∞. ‚Äî –î–∏–∞–Ω–∞",
  "–¢–≤–æ—è —Ü–µ–ª—å ‚Äî –Ω–µ –±—ã—Ç—å –∫–∞–∫ –≤—Å–µ, –∞ –±—ã—Ç—å –ª—É—á—à–µ–π –≤–µ—Ä—Å–∏–µ–π —Å–µ–±—è. ‚Äî –î–∏–∞–Ω–∞"
];

// –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ "–í—Ç–æ—Ä–Ω–∏–∫, 25 –∏—é–Ω—è"
const getCurrentDateString = () => {
  const now = new Date();
  const days = ['–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ', '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', '–í—Ç–æ—Ä–Ω–∏–∫', '–°—Ä–µ–¥–∞', '–ß–µ—Ç–≤–µ—Ä–≥', '–ü—è—Ç–Ω–∏—Ü–∞', '–°—É–±–±–æ—Ç–∞'];
  const months = ['—è–Ω–≤–∞—Ä—è', '—Ñ–µ–≤—Ä–∞–ª—è', '–º–∞—Ä—Ç–∞', '–∞–ø—Ä–µ–ª—è', '–º–∞—è', '–∏—é–Ω—è', '–∏—é–ª—è', '–∞–≤–≥—É—Å—Ç–∞', '—Å–µ–Ω—Ç—è–±—Ä—è', '–æ–∫—Ç—è–±—Ä—è', '–Ω–æ—è–±—Ä—è', '–¥–µ–∫–∞–±—Ä—è'];
  
  return `${days[now.getDay()]}, ${now.getDate()} ${months[now.getMonth()]}`;
};

// –°—Ç–∏–ª–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
const cardStyle = {
  background: '#fff',
  borderRadius: 16,
  padding: 20,
  marginBottom: 16,
  boxShadow: '0 2px 12px rgba(0, 0, 0, 0.08)',
  border: '1px solid #f0f0f0',
  width: '100%',
  boxSizing: 'border-box'
};

const headerStyle = {
  fontSize: 20,
  fontWeight: 700,
  color: '#1a1a1a',
  marginBottom: 16,
  display: 'flex',
  alignItems: 'center',
  gap: 8
};

const checkboxButtonStyle = (completed) => ({
  padding: '8px 16px',
  borderRadius: 8,
  border: '1px solid #e0e7ff',
  background: completed ? '#e0e7ff' : '#fff',
  color: completed ? '#2196f3' : '#666',
  fontSize: 14,
  fontWeight: 600,
  cursor: 'pointer',
  transition: 'all 0.2s ease',
  marginTop: 8
});

export default function TodayBlock({ day, answers, onBackToWeek }) {
  // –ï—Å–ª–∏ day –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω –∏–ª–∏ –Ω–µ–≤–∞–ª–∏–¥–µ–Ω ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ–º –º–æ–∫-–¥–µ–Ω—å
  if (!day || !day.date) {
    day = {
      date: '2024-06-03',
      title: '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫',
      workout: { title: '–î–æ–º–∞—à–Ω—è—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ ‚Ññ2', exercises: [ { name: '–ü—Ä–∏—Å–µ–¥–∞–Ω–∏—è', reps: 15 }, { name: '–û—Ç–∂–∏–º–∞–Ω–∏—è', reps: 10 } ] },
      meals: [ 
        { type: '–ó–∞–≤—Ç—Ä–∞–∫', menu: '–û–≤—Å—è–Ω–∫–∞ —Å —è–≥–æ–¥–∞–º–∏', calories: 320 },
        { type: '–ü–µ—Ä–µ–∫—É—Å', menu: '–ì—Ä–µ—á–µ—Å–∫–∏–π –π–æ–≥—É—Ä—Ç —Å –æ—Ä–µ—Ö–∞–º–∏', calories: 180 },
        { type: '–û–±–µ–¥', menu: '–ö—É—Ä–∏—Ü–∞ —Å —Ä–∏—Å–æ–º –∏ –æ–≤–æ—â–∞–º–∏', calories: 450 },
        { type: '–ü–æ–ª–¥–Ω–∏–∫', menu: '–Ø–±–ª–æ–∫–æ —Å –∞—Ä–∞—Ö–∏—Å–æ–≤–æ–π –ø–∞—Å—Ç–æ–π', calories: 200 },
        { type: '–£–∂–∏–Ω', menu: '–ó–∞–ø–µ—á–µ–Ω–Ω–∞—è —Ä—ã–±–∞ —Å —Å–∞–ª–∞—Ç–æ–º', calories: 380 }
      ],
      completed: false,
      dailySteps: 7500,
      dailyStepsGoal: 10000
    };
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –ª–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∞ —Å–µ–≥–æ–¥–Ω—è –∏–ª–∏ –ø–æ–∑–∂–µ
  const programStartsLater = answers && answers.start_date && new Date(answers.start_date) > new Date();
  
  const [completedExercises, setCompletedExercises] = useState(
    day.workout?.exercises.map((ex, i) => day.completedExercises?.[i] || false) || []
  );
  const [completedMeals, setCompletedMeals] = useState(
    day.meals?.map((m, i) => day.completedMealsArr?.[i] || false) || []
  );
  const [dailySteps] = useState(day.dailySteps || 7500);
  const [stepsGoal] = useState(day.dailyStepsGoal || 10000);
  const [aiAnalysis, setAiAnalysis] = useState('');
  const [loadingAI, setLoadingAI] = useState(false);
  
  // –ü–æ–ª—É—á–∞–µ–º —Å–ª—É—á–∞–π–Ω—É—é –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—É—é —Ü–∏—Ç–∞—Ç—É
  const todayQuote = motivationalQuotes[Math.floor(Math.random() * motivationalQuotes.length)];
  
  // –í—ã—á–∏—Å–ª—è–µ–º –æ–±—â–∏–µ –∫–∞–ª–æ—Ä–∏–∏ –∏ –ë–ñ–£
  const totalCalories = day.meals?.reduce((sum, meal) => sum + (meal.calories || 0), 0) || 1530;
  const targetCalories = answers?.targetCalories || 1800; // –ò–∑ –∫–≤–∏–∑–∞
  
  const products = day.meals
    ? Array.from(new Set(day.meals.flatMap(m => m.menu.split(/,| /).map(s => s.trim()).filter(Boolean))))
    : [];

  const programId = day.programId;

  async function handleExerciseChange(idx) {
    const updated = completedExercises.map((v, i) => i === idx ? !v : v);
    setCompletedExercises(updated);
    if (programId) {
      await fetch(`${API_URL}/api/program/day-complete`, {
        method: 'PATCH',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ programId, date: day.date, completedExercises: updated })
      });
    }
  }

  async function handleMealChange(idx) {
    const updated = completedMeals.map((v, i) => i === idx ? !v : v);
    setCompletedMeals(updated);
    if (programId) {
      await fetch(`${API_URL}/api/program/day-complete`, {
        method: 'PATCH',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ programId, date: day.date, completedMealsArr: updated })
      });
    }
  }

  async function handleAnalyzeClick() {
    setLoadingAI(true);
    setAiAnalysis('');
    try {
      const res = await fetch(`${API_URL}/api/calculate-plan`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          day,
          completedExercises,
          completedMeals,
          feedback: 'analyze-today'
        })
      });
      const data = await res.json();
      setAiAnalysis(data.plan || '–ù–µ—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç –ò–ò');
    } catch (e) {
      setAiAnalysis('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ –ò–ò');
    }
    setLoadingAI(false);
  }

  return (
    <div style={{ 
      width: '100vw', 
      minHeight: '100dvh', 
      display: 'flex', 
      flexDirection: 'column', 
      background: 'linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%)' 
    }}>
      {/* –®–∞–ø–∫–∞ —Å –∫–Ω–æ–ø–∫–æ–π –Ω–∞–∑–∞–¥ */}
      <div style={{ 
        padding: '16px 20px', 
        background: '#fff', 
        borderBottom: '1px solid #e2e8f0'
      }}>
        <button
          onClick={onBackToWeek}
          style={{
            fontSize: 16,
            padding: '8px 16px',
            borderRadius: 8,
            background: '#e0e7ff',
            border: 'none',
            fontWeight: 600,
            cursor: 'pointer',
            color: '#2196f3',
            whiteSpace: 'nowrap'
          }}
        >‚Üê –ö —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é</button>
        
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø–æ–¥ –∫–Ω–æ–ø–∫–æ–π */}
        <div style={{ 
          fontSize: 20, 
          fontWeight: 700, 
          color: '#1a1a1a', 
          textAlign: 'center',
          marginTop: 12
        }}>
          –¢–µ–∫—É—â–∏–π –¥–µ–Ω—å
        </div>
      </div>

      <div style={{ 
        flex: 1, 
        padding: '20px', 
        maxWidth: 480, 
        margin: '0 auto', 
        width: '100%',
        boxSizing: 'border-box'
      }}>
        
        {programStartsLater ? (
          // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –Ω–∞—á–Ω–µ—Ç—Å—è –ø–æ–∑–∂–µ
          <div style={{ ...cardStyle, textAlign: 'center' }}>
            <div style={{ fontSize: 24, fontWeight: 700, marginBottom: 16, color: '#1a1a1a' }}>
              –ü—Ä–æ–≥—Ä–∞–º–º–∞ –Ω–∞—á–Ω–µ—Ç—Å—è –ø–æ–∑–∂–µ
            </div>
            <div style={{ fontSize: 16, color: '#666', lineHeight: 1.5, marginBottom: 20 }}>
              –í—ã –≤—ã–±—Ä–∞–ª–∏ –Ω–∞—á–∞—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ {answers?.start_date ? new Date(answers.start_date).toLocaleDateString('ru-RU') : '–≤ –≤—ã–±—Ä–∞–Ω–Ω—É—é –¥–∞—Ç—É'}. 
              –î–æ —ç—Ç–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –º–æ–∂–µ—Ç–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –Ω–µ–¥–µ–ª—å–Ω—ã–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º.
            </div>
            <div style={{ 
              background: '#e3f0ff', 
              borderRadius: 12, 
              padding: '16px', 
              border: '1px solid #2196f3',
              color: '#1976d2',
              fontSize: 14,
              fontWeight: 500 
            }}>
              üí° –ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ—Å—å –∑–∞—Ä–∞–Ω–µ–µ: –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –∏ —Å–æ—Å—Ç–∞–≤—å—Ç–µ —Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫ –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –ø–∏—Ç–∞–Ω–∏—è
            </div>
          </div>
        ) : (
          <>
            {/* 1. –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –¥–∞—Ç–æ–π */}
            <div style={{ ...cardStyle, textAlign: 'center', marginBottom: 24 }}>
              <div style={{ fontSize: 14, color: '#666', marginBottom: 4 }}>–°–µ–≥–æ–¥–Ω—è</div>
              <div style={{ fontSize: 24, fontWeight: 700, color: '#1a1a1a' }}>
                {getCurrentDateString()}
              </div>
            </div>

            {/* 2. –ë–ª–æ–∫ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ */}
            <div style={cardStyle}>
              <div style={headerStyle}>
                üèãÔ∏è‚Äç‚ôÄÔ∏è –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞
              </div>
              
              {day.workout && day.workout.exercises && day.workout.exercises.length > 0 ? (
                <>
                  <div style={{ fontSize: 18, fontWeight: 600, color: '#1a1a1a', marginBottom: 16 }}>
                    {day.workout.title || '–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞'}
                  </div>
                  
                  {day.workout.exercises.map((ex, i) => {
                    const location = getWorkoutLocation(day.workout.title || day.workout.name);
                    const dayId = getDayId(day.workout.title || day.workout.name, location);
                    const exerciseName = getExerciseEnglishName(ex.name);
                    
                    return (
                      <div key={i} style={{ 
                        marginBottom: 20, 
                        padding: 16, 
                        background: '#f8fafc', 
                        borderRadius: 12,
                        border: '1px solid #e2e8f0'
                      }}>
                        <div style={{ fontSize: 16, fontWeight: 600, marginBottom: 8, color: '#1a1a1a' }}>
                          {ex.name}
                        </div>
                        <div style={{ fontSize: 14, color: '#666', marginBottom: 12 }}>
                          {ex.reps} –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π
                        </div>
                        
                        {location && dayId && exerciseName ? (
                          <VideoPlayer 
                            location={location}
                            dayId={dayId}
                            exerciseName={exerciseName}
                            title={ex.name}
                          />
                        ) : (
                          <div style={{ 
                            width: '100%', 
                            height: 120, 
                            background: '#e2e8f0', 
                            borderRadius: 8, 
                            display: 'flex', 
                            alignItems: 'center', 
                            justifyContent: 'center', 
                            color: '#94a3b8', 
                            fontSize: 14,
                            marginBottom: 12
                          }}>
                            üé• –í–∏–¥–µ–æ —Å–∫–æ—Ä–æ
                          </div>
                        )}
                        
                        <button
                          onClick={() => handleExerciseChange(i)}
                          style={{
                            ...checkboxButtonStyle(completedExercises[i]),
                            width: '100%'
                          }}
                        >
                          {completedExercises[i] ? '‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ' : '‚≠ï –í—ã–ø–æ–ª–Ω–∏—Ç—å'}
                        </button>
                      </div>
                    );
                  })}
                </>
              ) : (
                <div style={{ 
                  textAlign: 'center',
                  padding: 24,
                  background: 'linear-gradient(135deg, #e8f5e8 0%, #f0f8f0 100%)',
                  borderRadius: 12
                }}>
                  <div style={{ fontSize: 48, marginBottom: 12 }}>üåø</div>
                  <div style={{ fontSize: 18, fontWeight: 600, color: '#2d5a2d', marginBottom: 8 }}>
                    –°–µ–≥–æ–¥–Ω—è –¥–µ–Ω—å –æ—Ç–¥—ã—Ö–∞
                  </div>
                  <div style={{ fontSize: 14, color: '#666' }}>
                    –ü—Ä–æ–≥—É–ª—è–π—Å—è 10 000 —à–∞–≥–æ–≤ üí™
                  </div>
                </div>
              )}
            </div>

            {/* 3. –ë–ª–æ–∫ –ø–∏—Ç–∞–Ω–∏—è */}
            <div style={cardStyle}>
              <div style={headerStyle}>
                ü•ó –ü–∏—Ç–∞–Ω–∏–µ –Ω–∞ –¥–µ–Ω—å
              </div>
              
              {/* –ë–ñ–£ –∏ –ö–∞–ª–æ—Ä–∏–∏ */}
              <div style={{ 
                display: 'grid',
                gridTemplateColumns: 'repeat(4, 1fr)',
                gap: 8,
                background: '#f8fafc', 
                padding: 16, 
                borderRadius: 12,
                marginBottom: 16,
                border: '1px solid #e2e8f0'
              }}>
                <div style={{ textAlign: 'center' }}>
                  <div style={{ fontSize: 20, fontWeight: 700, color: '#2196f3' }}>{totalCalories}</div>
                  <div style={{ fontSize: 12, color: '#666' }}>–ö–∫–∞–ª</div>
                </div>
                <div style={{ textAlign: 'center' }}>
                  <div style={{ fontSize: 20, fontWeight: 700, color: '#10b981' }}>120–≥</div>
                  <div style={{ fontSize: 12, color: '#666' }}>–ë–µ–ª–∫–∏</div>
                </div>
                <div style={{ textAlign: 'center' }}>
                  <div style={{ fontSize: 20, fontWeight: 700, color: '#f59e0b' }}>80–≥</div>
                  <div style={{ fontSize: 12, color: '#666' }}>–ñ–∏—Ä—ã</div>
                </div>
                <div style={{ textAlign: 'center' }}>
                  <div style={{ fontSize: 20, fontWeight: 700, color: '#8b5cf6' }}>180–≥</div>
                  <div style={{ fontSize: 12, color: '#666' }}>–£–≥–ª–µ–≤–æ–¥—ã</div>
                </div>
              </div>

              {/* –ü—Ä–∏–µ–º—ã –ø–∏—â–∏ */}
              {day.meals && day.meals.map((meal, i) => (
                <div key={i} style={{
                  marginBottom: 12,
                  padding: 12,
                  background: '#f8fafc',
                  borderRadius: 8,
                  border: '1px solid #e2e8f0'
                }}>
                  <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: 8 }}>
                    <div style={{ fontSize: 16, fontWeight: 600, color: '#1a1a1a' }}>
                      {meal.type}
                    </div>
                    <div style={{ fontSize: 14, color: '#666' }}>
                      {meal.calories || 0} –∫–∫–∞–ª
                    </div>
                  </div>
                  <div style={{ fontSize: 14, color: '#666', marginBottom: 8 }}>
                    {meal.menu}
                  </div>
                  <button
                    onClick={() => handleMealChange(i)}
                    style={checkboxButtonStyle(completedMeals[i])}
                  >
                    {completedMeals[i] ? '‚úÖ –°—ä–µ–ª' : 'üçΩÔ∏è –°—ä–µ—Å—Ç—å'}
                  </button>
                </div>
              ))}
            </div>

            {/* 4. –ë–ª–æ–∫ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ */}
            <div style={cardStyle}>
              <div style={headerStyle}>
                üö∂ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
              </div>
              
              <div style={{
                display: 'flex',
                justifyContent: 'space-between',
                alignItems: 'center',
                marginBottom: 12
              }}>
                <div style={{ fontSize: 16, color: '#1a1a1a' }}>–®–∞–≥–∏ —Å–µ–≥–æ–¥–Ω—è</div>
                <div style={{ fontSize: 18, fontWeight: 700, color: dailySteps >= stepsGoal ? '#10b981' : '#2196f3' }}>
                  {dailySteps.toLocaleString()} / {stepsGoal.toLocaleString()}
                </div>
              </div>
              
              {/* –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä —à–∞–≥–æ–≤ */}
              <div style={{ 
                height: 8, 
                background: '#e2e8f0', 
                borderRadius: 4, 
                overflow: 'hidden',
                marginBottom: 12 
              }}>
                <div style={{ 
                  width: `${Math.min((dailySteps / stepsGoal) * 100, 100)}%`, 
                  height: '100%', 
                  background: dailySteps >= stepsGoal ? '#10b981' : '#2196f3',
                  transition: 'width 0.3s ease' 
                }} />
              </div>
              
              <div style={{ fontSize: 14, color: '#666', textAlign: 'center' }}>
                {dailySteps >= stepsGoal ? 
                  'üéâ –¶–µ–ª—å –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–∞! –û—Ç–ª–∏—á–Ω–æ!' : 
                  `–û—Å—Ç–∞–ª–æ—Å—å ${(stepsGoal - dailySteps).toLocaleString()} —à–∞–≥–æ–≤ –¥–æ —Ü–µ–ª–∏`
                }
              </div>
            </div>

            {/* 5. –ú–æ—Ç–∏–≤–∞—Ü–∏—è –¥–Ω—è */}
            <div style={{
              ...cardStyle,
              background: 'linear-gradient(135deg, #e0e7ff 0%, #c7d2fe 100%)',
              border: '1px solid #a5b4fc',
              textAlign: 'center',
              marginBottom: 24
            }}>
              <div style={{ fontSize: 24, marginBottom: 12 }}>üí¨</div>
              <div style={{ 
                fontSize: 16, 
                fontStyle: 'italic', 
                color: '#3730a3', 
                lineHeight: 1.4,
                fontWeight: 500
              }}>
                {todayQuote}
              </div>
            </div>
          </>
        )}
      </div>
    </div>
  );
}
